################################################################################
## Project Configuration
################################################################################
[project]
name        = "pypacter-cli"
description = "CLI for PyPacter"
dynamic     = ["version"]

authors     = [{ name = "JP-Ellis", email = "josh@jpellis.me" }]
maintainers = [{ name = "JP-Ellis", email = "josh@jpellis.me" }]

readme = "README.md"
license = { file = "LICENSE" }
keywords = ["pactflow", "pypacter"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: Other/Proprietary License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Code Generators",
]

requires-python = ">=3.8"

dependencies = [
  "aiohttp[speedups]~=3.0",
  "click~=8.0",
  "pyyaml~=6.0",
  "rich~=13.0",
  "rich-click~=1.0",
]

[project.urls]
Documentation = "https://github.com/pactflow/pactflow-python-coding-test/tree/main/pypacter-cli"
Issues        = "https://github.com/pactflow/pactflow-python-coding-test/issues"
Source        = "https://github.com/pactflow/pactflow-python-coding-test/tree/main/pypacter-cli"

[project.scripts]
pypacter = "pypacter_cli:cli"

[project.optional-dependencies]
devel-types = ["mypy==1.8.0", "pydantic~=1.0", "types-pyyaml"]
devel-test  = ["pytest", "pytest-cov", "coverage[toml]"]
devel       = ["pypacter-cli[devel-types,devel-test]", "ruff==0.2.2"]

################################################################################
## Build System Configuration
################################################################################
[build-system]
requires      = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source      = "vcs"
raw-options = { root = ".." }

[tool.hatch.build.hooks.vcs]
version-file = "src/pypacter_cli/__version__.py"

[tool.hatch.build.targets.sdist]
include = [
  # Source
  "/src/pypacter_cli/**/*.py",
  "/src/pypacter_cli/**/*.pyi",
  "/src/pypacter_cli/py.typed",
  # Metadata
  "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["/src/pypacter_cli"]
include = [
  # Source
  "/src/pypacter_cli/**/*.py",
  "/src/pypacter_cli/**/*.pyi",
  "/src/pypacter_cli/py.typed",
]

[tool.hatch.envs.default]
features = ["devel"]

[tool.hatch.envs.default.scripts]
lint      = "ruff check --show-source --show-fixes {args} src tests"
typecheck = "mypy src tests {args}"
format    = "ruff format src tests {args}"
test      = "pytest tests/ {args}"
all       = ["format", "lint", "typecheck", "test"]

[tool.hatch.envs.test]
features = ["devel"]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

################################################################################
## Ruff Configuration
################################################################################

[tool.ruff]
extend         = "../pyproject.toml"
target-version = "py38"

[tool.ruff.format]
preview = true

################################################################################
## PyTest Configuration
################################################################################

[tool.pytest.ini_options]
addopts = [
  "--import-mode=importlib",
  "--cov-config=pyproject.toml",
  "--cov-report=xml",
]

################################################################################
## Mypy Configuration
################################################################################

[tool.mypy]
plugins = "pydantic.mypy"

################################################################################
## Coverage Configuration
################################################################################

[tool.coverage.paths]
pypacter_cli = ["/src/pypacter_cli"]
tests        = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "if __name__ == .__main__.:", # Ignore non-runnable code
  "if TYPE_CHECKING:",          # Ignore typing
  "raise NotImplementedError",  # Ignore defensive assertions
  "@(abc\\.)?abstractmethod",   # Ignore abstract methods
]
